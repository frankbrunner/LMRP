#GPS Position Script
import time
import serial
import pynmea2
import os


#loop for the GPS

class GPSData01:
    def __init__(self):
        self.port = "/dev/ttyAMA0"
        self.ser = serial.Serial(self.port, baudrate=9600,timeout=0.5)

    def readLine(self):
        newdata = self.ser.readline()
        GPSdataString= str(newdata)
        GPSdataString= GPSdataString[2:-5]   #alle zeilenumbruch Zeichen am Anfang und ende werden entfernt
        return GPSdataString
        
    def parseGPRMC(self,data):
        print ("raw:", data) #prints raw data
        if data[0:6] == "$GPRMC":
            sdata = data.split(",")
            if sdata[2] == 'V':
                #print ("no satellite data available")
                return "no satellite data available"
            #print ("---Parsing GPRMC---",
            #time = sdata[1][0:2] + ":" + sdata[1][2:4] + ":" + sdata[1][4:6])
            data[0] = self.decode(sdata[3])     #latitude
            data[1] = sdata[4]                  #latitude direction N/S
            data[2] = self.decode(sdata[5])     #longitute
            data[3] = sdata[6]                  #longitude direction E/W
            data[4] = sdata[7]                  #Speed in knots
            data[5] = sdata[8]                  #True course
            data[6] = sdata[9][0:2] + "/" + sdata[9][2:4] + "/" + sdata[9][4:6]#date
            
            return data
            #print ("time : %s, latitude : %s(%s), longitude : %s(%s), speed : %s, True Course : %s, Date : %s" %  (time,lat,dirLat,lon,dirLon,speed,trCourse,date))
     
    def decode(self,coord):
        #Converts DDDMM.MMMMM > DD deg MM.MMMMM min
        x = coord.split(".")
        head = x[0]
        tail = x[1]
        deg = head[0:-2]
        min = head[-2:]
        return deg + " deg " + min + "." + tail + " min"
            

x = GPSData01()   
def clearConsole():
     clear = lambda: os.system("clear")
     clear()    
while True:
   data = x.readLine()
   value = x.parseGPRMC(data)
   if value != None:
    print(value)
